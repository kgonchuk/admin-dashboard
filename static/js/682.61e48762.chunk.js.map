{"version":3,"file":"static/js/682.61e48762.chunk.js","mappings":"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","sources":["components/AuthInput/AuthInput.style.js","components/AuthInput/AuthInput.jsx","components/LoginForm/ LoginForm.styled.js","components/LoginForm/LoginForm.jsx","pages/LoginPage/LoginPage.styled.js","pages/LoginPage/LoginPage.jsx"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const InputWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 6px;\n  margin-bottom: 14px;\n`;\n\nexport const InputLabel = styled.label`\n  font-size: 14px;\n  color: #444;\n`;\n\nexport const InputField = styled.input`\n  padding: 10px 12px;\n  border: 1px solid #ccc;\n  border-radius: 6px;\n  font-size: 15px;\n  &:focus {\n    border-color: #2b65ff;\n    outline: none;\n  }\n`;\n\nexport const ErrorText = styled.div`\n  color: red;\n  font-size: 12px;\n  margin-top: 4px;\n`;","import React from \"react\";\nimport { Field, ErrorMessage } from \"formik\";\nimport { InputWrapper, InputLabel, InputField, ErrorText } from \"./AuthInput.style\";\n\nconst AuthInput = ({ label, name, type = \"text\", placeholder, icon, ...rest }) => {\n  return (\n    <InputWrapper>\n      {label && <InputLabel htmlFor={name}>{label}</InputLabel>}\n      <div style={{ position: \"relative\" }}>\n        <Field\n          as={InputField}\n          id={name}\n          name={name}\n          type={type}\n          placeholder={placeholder}\n          {...rest}\n        />\n        {icon && <span style={{ position: \"absolute\", right: 10, top: 10 }}>{icon}</span>}\n      </div>\n      <ErrorMessage name={name} component={ErrorText} />\n    </InputWrapper>\n  );\n};\n\nexport default AuthInput;","import { Field } from 'formik';\nimport styled from 'styled-components';\nimport color from '../../global/globalColors';\nimport { breakpoints } from '../../global/breakPoints';\n\n\n  export const InputBlock = styled.div`\n  display: flex;\n    flex-direction: column;\n    gap: 14px;\n  ;` ;\n\nexport const Input = styled(Field)`\ndisplay: block;\n padding: 0 0 0 18px;\n  width: 335px;\n  height: 42px;\n  background:${color.white};\n  border: 1px solid #1D1E211A;\n  border-radius: 60px;\n  font-family: 'Inter', sans-serif;\n  font-weight: 400;\n  font-size: 12px;\n  line-height: 18px;\n  letter-spacing: 0em;\n  color:${color.black};\n  &::placeholder {\n    color:${color.blackLight};\n  }\n  &:focus {\n    border: 1px solid ${color.greenPrimary};\n    outline: none;\n  }\n    @media screen and (min-width: ${breakpoints.medium}) {\n     width: 323px;\n        }\n`;\nexport const LoginButton = styled.button`\n  margin-top: 40px;\n  padding: 14px 0;\n  width: 335px;\n  background: ${color.greenPrimary};\n  border-radius: 60px;\n  font-family: 'Inter', sans-serif;\n  font-weight: 500;\n  font-size: 14px;\n  line-height: 18px;\n  text-align: center;\n  letter-spacing: 0em;\n  color: #FFFFFF;\n  border: none;\n  cursor: pointer;\n  &:hover {\n    background: ${color.greenSecondary};\n  }\n      @media screen and (min-width: ${breakpoints.medium}) {\n     width: 323px;\n        }\n`;\n\nexport const EyeToggleBtn=styled.button`\n position: absolute;\n  top: 470px;\n  right: -25px;\n  transform: translateY(-50%);\n  background: none;\n  border: none;\n  cursor: pointer;\n\n  svg {\n   \n    display: inline-block;\n    width: 1em;\n    height: 1em;\n    // stroke-width: 0;\n    // stroke: ${color.black};\n    // fill: currentColor;\n  }\n\n  @media screen and (min-width: 768px) {\n    right: 260px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    right: 290px;\n    top: 397px;\n  }\n`","\n\nimport { Formik, Form } from \"formik\";\nimport * as Yup from \"yup\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useNavigate, Navigate } from \"react-router-dom\";\nimport { useState } from \"react\";\nimport { logIn } from \"../../redux/auth/authOperation\";\nimport AuthInput from \"../AuthInput/AuthInput\";\nimport { LoginButton, EyeToggleBtn, InputBlock } from \"./ LoginForm.styled\";\n\nconst schema = Yup.object({\n  email: Yup.string().email(\"Invalid email\").required(\"Email is required\"),\n  password: Yup.string()\n    .min(6, \"Password too short\")\n    .max(20, \"Password too long\")\n    .required(\"Password is required\"),\n});\n\nconst LoginForm = () => {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const [showPassword, setShowPassword] = useState(false);\n  const { accessToken, loading, error } = useSelector((state) => state.auth || {});\n\n  // üîê –Ø–∫—â–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á —É–∂–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–∏–π ‚Äî —Ä–µ–¥—ñ—Ä–µ–∫—Ç\n  if (accessToken) {\n    return <Navigate to=\"/dashboard\" replace />;\n  }\n\n  const handleSubmit = async (values, { setSubmitting }) => {\n    console.log(\"Submitting form with values:\", values);\n    try {\n      const result = await dispatch(logIn(values));\n      console.log(\"Login result:\", result);\n      if (logIn.fulfilled.match(result)) {\n        navigate(\"/dashboard\");\n      }\n    } finally {\n      setSubmitting(false);\n    }\n  };\n\n  return (\n    <Formik\n      initialValues={{ email: \"\", password: \"\" }}\n      validationSchema={schema}\n      onSubmit={handleSubmit}\n    >\n      {({ isSubmitting }) => (\n        <Form>\n          <InputBlock>\n            <AuthInput\n              label=\"Email\"\n              name=\"email\"\n               id=\"email\"\n              type=\"email\"\n              placeholder=\"Enter your email\"\n            />\n\n            <div style={{ position: \"relative\" }}>\n              <AuthInput\n                label=\"Password\"\n                 id=\"Password\"\n                name=\"password\"\n                type={showPassword ? \"text\" : \"password\"}\n                placeholder=\"Enter your password\"\n              />\n              <EyeToggleBtn\n                type=\"button\"\n                onClick={() => setShowPassword(!showPassword)}\n              >\n                {showPassword ? \"üôà\" : \"üëÅ\"}\n              </EyeToggleBtn>\n            </div>\n\n            {error && (\n              <div style={{ color: \"red\", marginTop: \"10px\", textAlign: \"center\" }}>\n                {error}\n              </div>\n            )}\n\n            <LoginButton type=\"submit\" disabled={isSubmitting || loading}>\n              {loading ? \"Loading...\" : \"Login\"}\n            </LoginButton>\n          </InputBlock>\n        </Form>\n      )}\n    </Formik>\n  );\n};\n\nexport default LoginForm;","import styled from \"styled-components\";\nimport { breakpoints } from \"../../global/breakPoints\";\nimport color from \"../../global/globalColors\";\n\nexport const FormContainer = styled.div`\n    position: relative;\n    padding:24px 20px;\n\n    @media screen and (min-width: ${breakpoints.medium}) {\n padding:24px 32px;\n    }\n    @media screen and (min-width: ${breakpoints.large}) {\npadding :28px 100px;\n    }\n `;\n\nexport const HeadBlock = styled.div`\n display:flex;\n align-items:center;\n gap:14px;\n @media screen and (min-width: ${breakpoints.medium}) {\ngap:4px;\n    }\n \n `;\n export const IconLogin = styled.svg`\n  width: 44px;\n  height: 44px;\n \n  }\n`;\nexport const HeadLogo = styled.h2`\nfont-family: 'Inter', sans-serif;\nfont-weight: 600;\nfont-size: 20px;\nline-height: 100%;\nletter-spacing: -0.03em;\ncolor: #1D1E21;\n`;\nexport const HeadTitleBlock = styled.div`\nwidth: 335px;\nmargin-bottom:40px;\n@media screen and (min-width: ${breakpoints.medium}) {\nwidth: 614px;\nmargin-bottom:50px;\n    }\n@media screen and (min-width: ${breakpoints.large}) {\nwidth: 614px;\n\n    }\n`;\nexport const TableImg=styled.img`\nposition: absolute;\ntop: 143px;\nleft: 220px;\nwidth: 95px;\nheight: 93px;\n\n@media screen and (min-width: ${breakpoints.medium}) {\ntop: 100px;\nleft: 448px;\nwidth: 179px;\nheight: 175px;\n    };\n\n@media screen and (min-width: ${breakpoints.large}) {\ntop: 194px;\nleft: 516px;\nwidth: 179px;\nheight: 175px;\n    }\n    `;\n\nexport const HeadTitle = styled.h2`\n  font-family: 'Inter', sans-serif; \n  font-weight: 600;\n  font-size: 28px;\n  line-height: 34px;\n  letter-spacing: 0%;\n  color: #1D1E21;\n  span{\n    color: #59b17a;\n  }\n   @media screen and (min-width: ${breakpoints.medium}) {\n    font-size: 54px;\n    width: 614px;\n    height: 240px;\n    left: 32px;\n    top: 272px;\n    line-height: 60px;\n  }\n\n  @media screen and (min-width: ${breakpoints.large}) {\n    left: 100px;\n    top: 298px;\n  }\n  `;\n\n  export const HeaderFormWrap=styled.div`\n\n  margin-top:148px;\n  @media screen and (min-width: ${breakpoints.large}) {\ndisplay:flex;\nalign-items:center;\ngap:150px;\nmargin-top:226px;\n\n\n  `;\nexport const HeaderImg=styled.div`\nposition:absolute;\ntop:666px;\nleft:117px;\n\n  @media screen and (min-width: ${breakpoints.medium}) {\ntop:761px;\nleft:502px;\n        }\n\n@media screen and (min-width: ${breakpoints.large}) {\ntop:600px;\nleft:1200px;\n  }\n`\n","import LoginForm from \"../../components/LoginForm/LoginForm\";\nimport { FormContainer, HeadBlock, HeaderFormWrap, HeaderImg, HeadLogo, HeadTitle, HeadTitleBlock, TableImg } from \"./LoginPage.styled\";\nimport tablet from '../../assets/images/tablet.png';\nimport loginForm from '../../assets/images/loginForm.svg'\nimport img from '../../assets/images/elements.png'\n\n\n\n\nconst LoginPage = () => {\n  \n  return (\n    <FormContainer>\n\n      <HeadBlock>\n  <img src={loginForm} alt='mySvgImage' width={44} height={44} />\n<HeadLogo>E-Pharmacy</HeadLogo>\n</HeadBlock>\n\n<HeaderFormWrap>\n\n<HeadTitleBlock>\n     <TableImg src={tablet} alt='mySvgImage' />\n    <HeadTitle>Your medication, delivered Say goodbye to all <span>your healthcare</span> worries with us </HeadTitle>\n    </HeadTitleBlock>\n\n      <LoginForm />\n\n     </HeaderFormWrap>\n     <HeaderImg>\n<img src={img} alt=\"heder\"/>\n     </HeaderImg>\n\n    </FormContainer>\n  );\n};\n\nexport default LoginPage;"],"names":["InputWrapper","styled","div","_templateObject","_taggedTemplateLiteral","InputLabel","label","_templateObject2","InputField","input","_templateObject3","ErrorText","_templateObject4","_ref","name","type","placeholder","icon","rest","_objectWithoutProperties","_excluded","_jsxs","children","_jsx","htmlFor","style","position","Field","_objectSpread","as","id","right","top","ErrorMessage","component","InputBlock","LoginButton","color","white","black","blackLight","greenPrimary","breakpoints","medium","button","greenSecondary","EyeToggleBtn","schema","Yup","email","required","password","min","max","LoginForm","dispatch","useDispatch","navigate","useNavigate","showPassword","setShowPassword","useState","accessToken","loading","error","useSelector","state","auth","Navigate","to","replace","Formik","initialValues","validationSchema","onSubmit","async","values","setSubmitting","console","log","result","logIn","fulfilled","match","_ref2","isSubmitting","Form","AuthInput","onClick","marginTop","textAlign","disabled","FormContainer","large","HeadBlock","HeadLogo","svg","h2","HeadTitleBlock","_templateObject5","TableImg","img","_templateObject6","HeadTitle","_templateObject7","HeaderFormWrap","_templateObject8","HeaderImg","_templateObject9","LoginPage","src","loginForm","alt","width","height","tablet"],"sourceRoot":""}